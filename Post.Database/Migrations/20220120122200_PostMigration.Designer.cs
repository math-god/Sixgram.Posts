// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Post.Database;

#nullable disable

namespace Post.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220120122200_PostMigration")]
    partial class PostMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Post.Database.EntityModels.CommentaryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("commentary_id");

                    b.Property<string>("Commentary")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("commentary");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid")
                        .HasColumnName("post_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("commentaries");
                });

            modelBuilder.Entity("Post.Database.EntityModels.MembershipModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string[]>("Subscribers")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("subscribers");

                    b.Property<string[]>("Subscriptions")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("subscriptions");

                    b.HasKey("Id");

                    b.ToTable("membership");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a75ec510-fec2-4dbb-a6cb-aba1da7e48bc"),
                            Subscribers = new string[0],
                            Subscriptions = new string[0]
                        },
                        new
                        {
                            Id = new Guid("b65d2233-8fc9-4015-b481-4967cdeae822"),
                            Subscribers = new string[0],
                            Subscriptions = new string[0]
                        });
                });

            modelBuilder.Entity("Post.Database.EntityModels.PostModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("post_id");

                    b.Property<string[]>("Commentaries")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("commentaries");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid")
                        .HasColumnName("file_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3438a1dc-57cf-4c54-81d0-d26a31583693"),
                            Commentaries = new string[0],
                            FileId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Post.Database.EntityModels.CommentaryModel", b =>
                {
                    b.HasOne("Post.Database.EntityModels.PostModel", "PostModel")
                        .WithMany("CommentaryModel")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostModel");
                });

            modelBuilder.Entity("Post.Database.EntityModels.PostModel", b =>
                {
                    b.Navigation("CommentaryModel");
                });
#pragma warning restore 612, 618
        }
    }
}
