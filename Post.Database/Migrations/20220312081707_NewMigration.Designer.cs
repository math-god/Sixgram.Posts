// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Post.Database;

#nullable disable

namespace Post.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220312081707_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Post.Database.EntityModels.CommentaryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("commentary_id");

                    b.Property<string>("Commentary")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("commentary");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("day_created");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid")
                        .HasColumnName("post_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("commentaries");
                });

            modelBuilder.Entity("Post.Database.EntityModels.PostModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("post_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("day_created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("character varying(2500)")
                        .HasColumnName("description");

                    b.Property<Guid?>("FileId")
                        .HasColumnType("uuid")
                        .HasColumnName("file_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("45ed469e-7471-4662-b2f0-576bd969e818"),
                            DateCreated = new DateTime(2022, 3, 12, 11, 17, 7, 360, DateTimeKind.Local).AddTicks(9191),
                            Description = "Eu cum iuvaret debitis voluptatibus, esse perfecto reformidans id has.",
                            FileId = new Guid("81889ddf-aa61-4fdc-b9ef-037b56677353"),
                            UserId = new Guid("07587c3f-dd72-4bfc-ac08-ff374de1cf25")
                        },
                        new
                        {
                            Id = new Guid("9b1ef0bc-6f56-4ee0-a3dd-a186bc952def"),
                            DateCreated = new DateTime(2022, 3, 12, 11, 17, 7, 360, DateTimeKind.Local).AddTicks(9196),
                            Description = "Tation delenit percipitur at vix. Tation delenit percipitur at vix",
                            FileId = new Guid("2167ca73-7e25-41f7-bfc5-9c85a0efb884"),
                            UserId = new Guid("e8756f2b-b509-4a19-a8d8-ffc90b92c378")
                        });
                });

            modelBuilder.Entity("Post.Database.EntityModels.SubscriptionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("day_created");

                    b.Property<Guid>("RespondentId")
                        .HasColumnType("uuid")
                        .HasColumnName("respondent_id");

                    b.Property<Guid>("SubscriberId")
                        .HasColumnType("uuid")
                        .HasColumnName("subscriber_id");

                    b.HasKey("Id");

                    b.ToTable("subscription");

                    b.HasData(
                        new
                        {
                            Id = new Guid("02106d1d-c80b-43f8-acd3-97c584fc2137"),
                            DateCreated = new DateTime(2022, 3, 12, 11, 17, 7, 360, DateTimeKind.Local).AddTicks(8479),
                            RespondentId = new Guid("1dc0ca07-0686-4a8d-a223-1a8bf11b2c4d"),
                            SubscriberId = new Guid("4fb90a9a-4b5c-4794-8cbc-c58e9dad4b93")
                        },
                        new
                        {
                            Id = new Guid("f243908e-cba3-467e-bbfc-9ca80baa6519"),
                            DateCreated = new DateTime(2022, 3, 12, 11, 17, 7, 360, DateTimeKind.Local).AddTicks(8510),
                            RespondentId = new Guid("02a1387d-4ff9-4e7c-800a-60291d3a1906"),
                            SubscriberId = new Guid("4b2cf11d-c2ee-4b2a-885b-c84abde13509")
                        });
                });

            modelBuilder.Entity("Post.Database.EntityModels.CommentaryModel", b =>
                {
                    b.HasOne("Post.Database.EntityModels.PostModel", "PostModel")
                        .WithMany("CommentaryModels")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostModel");
                });

            modelBuilder.Entity("Post.Database.EntityModels.PostModel", b =>
                {
                    b.Navigation("CommentaryModels");
                });
#pragma warning restore 612, 618
        }
    }
}
